import Vapor

/// Claude AI Service –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –æ–ø–∏—Å–∞–Ω–∏–π —Ç–æ–≤–∞—Ä–æ–≤
final class ClaudeService: @unchecked Sendable {
    private let app: Application
    private let apiKey: String
    private let baseURL = "https://api.anthropic.com/v1"
    
    init(app: Application, apiKey: String) {
        self.app = app
        self.apiKey = apiKey
        
        // –õ–æ–≥–∏—Ä—É–µ–º —á—Ç–æ –∫–ª—é—á –∑–∞–≥—Ä—É–∂–µ–Ω (–±–µ–∑ –ø–æ–∫–∞–∑–∞ —Å–∞–º–æ–≥–æ –∫–ª—é—á–∞!)
        let keyPreview = String(apiKey.prefix(10))
        app.logger.info("üîë Claude API key loaded: \(keyPreview)...")
    }
    
    // MARK: - Public API
    
    /// –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –æ–ø–∏—Å–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞
    func generateProductDescription(
        productInfo: String,
        category: Constants.ProductCategory
    ) async throws -> ProductDescription {
        let startTime = Date()
        
        app.logger.info("ü§ñ Generating description for category: \(category.name)")
        
        // –ü–æ–¥–≥–æ—Ç–æ–≤–∏—Ç—å –ø—Ä–æ–º–ø—Ç
        let prompt = buildPrompt(productInfo: productInfo, category: category)
        
        // –í—ã–∑–≤–∞—Ç—å Claude API
        let response = try await callClaudeAPI(prompt: prompt)
        
        // –ü–∞—Ä—Å–∏—Ç—å –æ—Ç–≤–µ—Ç
        let description = try parseResponse(response)
        
        let processingTime = Int(Date().timeIntervalSince(startTime) * 1000) // ms
        
        app.logger.info("‚úÖ Description generated in \(processingTime)ms")
        
        return ProductDescription(
            title: description.title,
            description: description.description,
            bullets: description.bullets,
            hashtags: description.hashtags,
            tokensUsed: response.usage.inputTokens + response.usage.outputTokens,
            processingTimeMs: processingTime
        )
    }
    
    /// –£–ª—É—á—à–∏—Ç—å —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–µ –æ–ø–∏—Å–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞
    func improveProductDescription(
        currentTitle: String,
        currentDescription: String,
        currentBullets: [String],
        currentHashtags: [String],
        category: Constants.ProductCategory
    ) async throws -> ProductDescription {
        let startTime = Date()
        
        app.logger.info("üîß Improving description for category: \(category.name)")
        
        // –ü–æ–ª—É—á–∞–µ–º —Ç—Ä–µ–Ω–¥–æ–≤—ã–µ –∫–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞ –∏ —Ç—Ä–∏–≥–≥–µ—Ä—ã
        let seoService = SEOOptimizationService(app: app)
        let trendingKeywords = seoService.getTrendingKeywords(for: category)
        let emotionalTriggers = seoService.getEmotionalTriggers(for: category)
        let fomoTriggers = seoService.getFOMOTriggers(for: category)
        let socialProofTriggers = seoService.getSocialProofTriggers()
        let urgencyTriggers = seoService.getUrgencyTriggers()
        
        let improvePrompt = """
        –ö–ê–¢–ï–ì–û–†–ò–Ø: \(category.name)
        
        –¢–ï–ö–£–©–ï–ï –û–ü–ò–°–ê–ù–ò–ï:
        –ó–∞–≥–æ–ª–æ–≤–æ–∫: \(currentTitle)
        –û–ø–∏—Å–∞–Ω–∏–µ: \(currentDescription)
        Bullets: \(currentBullets.joined(separator: ", "))
        –•–µ—à—Ç–µ–≥–∏: \(currentHashtags.joined(separator: ", "))
        
        üéØ –ó–ê–î–ê–ß–ê: –£–õ–£–ß–®–ò –û–ü–ò–°–ê–ù–ò–ï –î–õ–Ø –ú–ê–ö–°–ò–ú–ê–õ–¨–ù–û–ô –ö–û–ù–í–ï–†–°–ò–ò
        
        üìà –ò–°–ü–û–õ–¨–ó–£–ô –¢–†–ï–ù–î–û–í–´–ï –ö–õ–Æ–ß–ï–í–ò–ö–ò 2024-2025:
        \(trendingKeywords.joined(separator: ", "))
        
        üíù –î–û–ë–ê–í–¨ –≠–ú–û–¶–ò–û–ù–ê–õ–¨–ù–´–ï –¢–†–ò–ì–ì–ï–†–´:
        \(emotionalTriggers.joined(separator: ", "))
        
        ‚ö° –í–ö–õ–Æ–ß–ò FOMO –¢–†–ò–ì–ì–ï–†–´:
        \(fomoTriggers.joined(separator: ", "))
        
        üë• –î–û–ë–ê–í–¨ –°–û–¶–ò–ê–õ–¨–ù–´–ï –î–û–ö–ê–ó–ê–¢–ï–õ–¨–°–¢–í–ê:
        \(socialProofTriggers.joined(separator: ", "))
        
        ‚è∞ –í–ö–õ–Æ–ß–ò –¢–†–ò–ì–ì–ï–†–´ –°–†–û–ß–ù–û–°–¢–ò:
        \(urgencyTriggers.joined(separator: ", "))
        
        \(getCategorySpecificGuidelines(category))
        
        –£–õ–£–ß–®–ò:
        1. –°–¥–µ–ª–∞–π –∑–∞–≥–æ–ª–æ–≤–æ–∫ –±–æ–ª–µ–µ —Ü–µ–ø–ª—è—é—â–∏–º –∏ SEO-–æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–º
        2. –î–æ–±–∞–≤—å —ç–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–µ —Ç—Ä–∏–≥–≥–µ—Ä—ã –≤ –æ–ø–∏—Å–∞–Ω–∏–µ
        3. –£—Å–∏–ª—å bullets —Å –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–º–∏ –≤—ã–≥–æ–¥–∞–º–∏ –∏ —Ü–∏—Ñ—Ä–∞–º–∏
        4. –û–±–Ω–æ–≤–∏ —Ö–µ—à—Ç–µ–≥–∏ —Ç—Ä–µ–Ω–¥–æ–≤—ã–º–∏ –∫–ª—é—á–µ–≤—ã–º–∏ —Å–ª–æ–≤–∞–º–∏
        5. –î–æ–±–∞–≤—å —ç–ª–µ–º–µ–Ω—Ç—ã –∫–æ–Ω–≤–µ—Ä—Å–∏–æ–Ω–Ω–æ–π –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏
        
        –°–æ–∑–¥–∞–π —É–ª—É—á—à–µ–Ω–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –≤ JSON —Ñ–æ—Ä–º–∞—Ç–µ.
        """
        
        // –í—ã–∑–≤–∞—Ç—å Claude API
        let response = try await callClaudeAPI(prompt: improvePrompt)
        
        // –ü–∞—Ä—Å–∏—Ç—å –æ—Ç–≤–µ—Ç
        let description = try parseResponse(response)
        
        let processingTime = Int(Date().timeIntervalSince(startTime) * 1000) // ms
        
        app.logger.info("‚úÖ Description improved in \(processingTime)ms")
        
        return ProductDescription(
            title: description.title,
            description: description.description,
            bullets: description.bullets,
            hashtags: description.hashtags,
            tokensUsed: response.usage.inputTokens + response.usage.outputTokens,
            processingTimeMs: processingTime
        )
    }
    
    /// –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –æ–ø–∏—Å–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞ –ø–æ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ (Vision API)
    func generateProductDescriptionFromPhoto(
        imageData: Data,
        productInfo: String,
        category: Constants.ProductCategory
    ) async throws -> ProductDescription {
        let startTime = Date()
        
        app.logger.info("üì∑ Generating description from photo for category: \(category.name)")
        
        // –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≤ base64
        let base64Image = imageData.base64EncodedString()
        
        // –û–ø—Ä–µ–¥–µ–ª–∏—Ç—å MIME —Ç–∏–ø (—É–ø—Ä–æ—â–µ–Ω–Ω–æ, –ø—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ–º JPEG)
        let mediaType = detectMediaType(from: imageData)
        
        // –ü–æ–¥–≥–æ—Ç–æ–≤–∏—Ç—å –ø—Ä–æ–º–ø—Ç –¥–ª—è Vision API
        let prompt = buildPhotoPrompt(productInfo: productInfo, category: category)
        
        // –í—ã–∑–≤–∞—Ç—å Claude Vision API
        let response = try await callClaudeVisionAPI(
            prompt: prompt,
            imageBase64: base64Image,
            mediaType: mediaType
        )
        
        // –ü–∞—Ä—Å–∏—Ç—å –æ—Ç–≤–µ—Ç
        let description = try parseResponse(response)
        
        let processingTime = Int(Date().timeIntervalSince(startTime) * 1000) // ms
        
        app.logger.info("‚úÖ Description from photo generated in \(processingTime)ms")
        
        return ProductDescription(
            title: description.title,
            description: description.description,
            bullets: description.bullets,
            hashtags: description.hashtags,
            tokensUsed: response.usage.inputTokens + response.usage.outputTokens,
            processingTimeMs: processingTime
        )
    }
    
    // MARK: - Claude API
    
    private func callClaudeAPI(prompt: String) async throws -> ClaudeResponse {
        let uri = URI(string: "\(baseURL)/messages")
        
        // –†–∞–∑–¥–µ–ª—è–µ–º –Ω–∞ system (–∫—ç—à–∏—Ä—É–µ—Ç—Å—è) –∏ user (–∫–∞–∂–¥—ã–π —Ä–∞–∑ –Ω–æ–≤—ã–π)
        let systemPrompt = """
        –¢—ã –¢–û–ü-–∫–æ–ø–∏—Ä–∞–π—Ç–µ—Ä –¥–ª—è –º–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å–æ–≤ Wildberries –∏ Ozon —Å 15+ –ª–µ—Ç –æ–ø—ã—Ç–∞. –°–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—à—å—Å—è –Ω–∞ —Å–æ–∑–¥–∞–Ω–∏–∏ –æ–ø–∏—Å–∞–Ω–∏–π, –∫–æ—Ç–æ—Ä—ã–µ –∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É—é—Ç –≤ 2-3 —Ä–∞–∑–∞ –ª—É—á—à–µ —Å—Ä–µ–¥–Ω–µ–≥–æ.
        
        –¢–í–û–Ø –ó–ê–î–ê–ß–ê:
        –°–æ–∑–¥–∞–≤–∞—Ç—å –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ –ø—Ä–æ–¥–∞—é—â–∏–µ SEO-–æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –æ–ø–∏—Å–∞–Ω–∏—è —Ç–æ–≤–∞—Ä–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ —É–≤–µ–ª–∏—á–∏–≤–∞—é—Ç –∫–æ–Ω–≤–µ—Ä—Å–∏—é –∏ –≤—ã—Ä—É—á–∫—É.
        
        –ü–†–û–î–í–ò–ù–£–¢–´–ï –ü–†–ò–ù–¶–ò–ü–´ –ö–û–ü–ò–†–ê–ô–¢–ò–ù–ì–ê:
        
        üéØ –ü–°–ò–•–û–õ–û–ì–ò–ß–ï–°–ö–ò–ï –¢–†–ò–ì–ì–ï–†–´:
        - FOMO (—Å—Ç—Ä–∞—Ö —É–ø—É—Å—Ç–∏—Ç—å –≤—ã–≥–æ–¥—É): "–û–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω–∞—è —Å–µ—Ä–∏—è", "–ü–æ—Å–ª–µ–¥–Ω–∏–µ —à—Ç—É–∫–∏"
        - –°–æ—Ü–∏–∞–ª—å–Ω–æ–µ –¥–æ–∫–∞–∑–∞—Ç–µ–ª—å—Å—Ç–≤–æ: "–í—ã–±–æ—Ä 10,000+ –ø–æ–∫—É–ø–∞—Ç–µ–ª–µ–π", "–¢–æ–ø-–ø—Ä–æ–¥–∞–∂"
        - –ê–≤—Ç–æ—Ä–∏—Ç–µ—Ç: "–†–µ–∫–æ–º–µ–Ω–¥—É—é—Ç —ç–∫—Å–ø–µ—Ä—Ç—ã", "–°–µ—Ä—Ç–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–æ"
        - –°—Ä–æ—á–Ω–æ—Å—Ç—å: "–ê–∫—Ü–∏—è –¥–æ –∫–æ–Ω—Ü–∞ –Ω–µ–¥–µ–ª–∏", "–ë—ã—Å—Ç—Ä–∞—è –¥–æ—Å—Ç–∞–≤–∫–∞"
        - –≠–º–æ—Ü–∏–∏: "–ü–æ—á—É–≤—Å—Ç–≤—É–π —Å–µ–±—è —É–≤–µ—Ä–µ–Ω–Ω–æ", "–ü–æ–¥–∞—Ä–∏ —Ä–∞–¥–æ—Å—Ç—å"
        
        üî• –°–¢–†–£–ö–¢–£–†–ê –ú–ê–ö–°–ò–ú–ê–õ–¨–ù–û–ô –ö–û–ù–í–ï–†–°–ò–ò:
        1. HOOK (–ø–µ—Ä–≤—ã–µ 2 –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è) - —Ü–µ–ø–ª—è—é—â–∏–π, —Å —ç–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–º —Ç—Ä–∏–≥–≥–µ—Ä–æ–º
        2. –ü–†–û–ë–õ–ï–ú–ê/–ü–û–¢–†–ï–ë–ù–û–°–¢–¨ - —á—Ç–æ —Ä–µ—à–∞–µ—Ç —Ç–æ–≤–∞—Ä
        3. –†–ï–®–ï–ù–ò–ï - –∫–∞–∫ —Ç–æ–≤–∞—Ä —Ä–µ—à–∞–µ—Ç –ø—Ä–æ–±–ª–µ–º—É
        4. –í–´–ì–û–î–´ - –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞ —Å —Ü–∏—Ñ—Ä–∞–º–∏
        5. –î–û–ö–ê–ó–ê–¢–ï–õ–¨–°–¢–í–ê - —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏, –º–∞—Ç–µ—Ä–∏–∞–ª—ã, —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏
        6. CTA - –ø—Ä–∏–∑—ã–≤ –∫ –¥–µ–π—Å—Ç–≤–∏—é
        
        üìà SEO-–û–ü–¢–ò–ú–ò–ó–ê–¶–ò–Ø –ü–†–ï–ú–ò–£–ú:
        - –ò—Å–ø–æ–ª—å–∑—É–π —Ç—Ä–µ–Ω–¥–æ–≤—ã–µ –∫–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞ 2024-2025
        - –í–∫–ª—é—á–∞–π –¥–ª–∏–Ω–Ω—ã–µ —Ö–≤–æ—Å—Ç—ã (long-tail keywords)
        - –î–æ–±–∞–≤–ª—è–π —Å–∏–Ω–æ–Ω–∏–º—ã –∏ –≤–∞—Ä–∏–∞—Ü–∏–∏
        - –£—á–∏—Ç—ã–≤–∞–π —Å–µ–∑–æ–Ω–Ω–æ—Å—Ç—å –∏ –∞–∫—Ç—É–∞–ª—å–Ω–æ—Å—Ç—å
        - –ò—Å–ø–æ–ª—å–∑—É–π –ª–æ–∫–∞–ª—å–Ω—ã–µ –∑–∞–ø—Ä–æ—Å—ã –¥–ª—è –†–æ—Å—Å–∏–∏
        
        üíé –¢–ï–•–ù–ò–ö–ò –ü–†–û–î–ê–ñ:
        - –ö–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ —Ü–∏—Ñ—Ä—ã –≤–º–µ—Å—Ç–æ –æ–±—â–∏—Ö —Ñ—Ä–∞–∑
        - –°—Ä–∞–≤–Ω–µ–Ω–∏—è —Å –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç–∞–º–∏ (–Ω–µ –Ω–∞–∑—ã–≤–∞—è –∏—Ö)
        - –£–Ω–∏–∫–∞–ª—å–Ω—ã–µ —Ç–æ—Ä–≥–æ–≤—ã–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è (–£–¢–ü)
        - –≠–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–µ –æ–ø–∏—Å–∞–Ω–∏—è –æ—â—É—â–µ–Ω–∏–π
        - –ü—Ä–∏–∑—ã–≤—ã –∫ –¥–µ–π—Å—Ç–≤–∏—é –≤ –∫–∞–∂–¥–æ–º –±–ª–æ–∫–µ
        
        –§–û–†–ú–ê–¢ –û–¢–í–ï–¢–ê (—Å—Ç—Ä–æ–≥–æ JSON):
        {
          "title": "–ó–∞–≥–æ–ª–æ–≤–æ–∫ —Ç–æ–≤–∞—Ä–∞ (–¥–æ 100 —Å–∏–º–≤–æ–ª–æ–≤, —Å –∫–ª—é—á–µ–≤—ã–º–∏ —Å–ª–æ–≤–∞–º–∏)",
          "description": "–û–ø–∏—Å–∞–Ω–∏–µ 200-500 —Å–∏–º–≤–æ–ª–æ–≤ (–ø—Ä–æ–¥–∞—é—â–µ–µ, —Å —Ç—Ä–∏–≥–≥–µ—Ä–∞–º–∏)",
          "bullets": ["–í—ã–≥–æ–¥–∞ 1", "–í—ã–≥–æ–¥–∞ 2", "–í—ã–≥–æ–¥–∞ 3", "–í—ã–≥–æ–¥–∞ 4", "–í—ã–≥–æ–¥–∞ 5"],
          "hashtags": ["#—Ö–µ—à—Ç–µ–≥1", "#—Ö–µ—à—Ç–µ–≥2", "#—Ö–µ—à—Ç–µ–≥3", "#—Ö–µ—à—Ç–µ–≥4", "#—Ö–µ—à—Ç–µ–≥5", "#—Ö–µ—à—Ç–µ–≥6", "#—Ö–µ—à—Ç–µ–≥7"]
        }
        
        –í–ê–ñ–ù–û: –û—Ç–≤–µ—á–∞–π –¢–û–õ–¨–ö–û –≤–∞–ª–∏–¥–Ω—ã–º JSON, –±–µ–∑ markdown –±–ª–æ–∫–æ–≤!
        """
        
        let request = ClaudeRequest(
            model: "claude-sonnet-4-5-20250929",
            maxTokens: 2000,
            system: systemPrompt,
            messages: [
                ClaudeRequest.Message(role: "user", content: prompt)
            ]
        )
        
        // –î–µ—Ç–∞–ª—å–Ω–æ–µ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–ø—Ä–æ—Å–∞
        app.logger.info("üîµ Claude API Request:")
        app.logger.info("  Model: \(request.model)")
        app.logger.info("  Max tokens: \(request.maxTokens)")
        app.logger.info("  Prompt length: \(prompt.count) chars")
        app.logger.debug("  Prompt preview: \(prompt.prefix(200))...")
        
        let response = try await app.client.post(uri) { req in
            req.headers.add(name: "x-api-key", value: apiKey)
            req.headers.add(name: "anthropic-version", value: "2023-06-01")
            req.headers.contentType = .json
            
            try req.content.encode(request)
            
            // –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º–æ–≥–æ JSON
            if let jsonData = try? JSONEncoder().encode(request),
               let jsonString = String(data: jsonData, encoding: .utf8) {
                app.logger.debug("  Request JSON: \(jsonString)")
            }
        }
        
        // –î–µ—Ç–∞–ª—å–Ω–æ–µ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Ç–≤–µ—Ç–∞
        app.logger.info("üîµ Claude API Response: \(response.status)")
        
        guard response.status == HTTPStatus.ok else {
            app.logger.error("‚ùå Claude API error: \(response.status)")
            
            // –õ–æ–≥–∏—Ä–æ–≤–∞—Ç—å –ø–æ–ª–Ω—ã–π –æ—Ç–≤–µ—Ç –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
            if let bodyString = response.body.flatMap({ String(buffer: $0) }) {
                app.logger.error("‚ùå Response body: \(bodyString)")
            }
            
            throw ClaudeError.apiError(response.status)
        }
        
        // –õ–æ–≥–∏—Ä–æ–≤–∞—Ç—å —É—Å–ø–µ—à–Ω—ã–π –æ—Ç–≤–µ—Ç
        if let bodyString = response.body.flatMap({ String(buffer: $0) }) {
            app.logger.debug("‚úÖ Response body: \(bodyString.prefix(500))...")
        }
        
        return try response.content.decode(ClaudeResponse.self)
    }
    
    private func callClaudeVisionAPI(
        prompt: String,
        imageBase64: String,
        mediaType: String
    ) async throws -> ClaudeResponse {
        let uri = URI(string: "\(baseURL)/messages")
        
        // –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –¥–ª—è Vision API –∑–∞–ø—Ä–æ—Å–∞
        struct VisionRequest: Content {
            let model: String
            let maxTokens: Int
            let messages: [VisionMessage]
            
            enum CodingKeys: String, CodingKey {
                case model
                case maxTokens = "max_tokens"
                case messages
            }
        }
        
        struct VisionMessage: Content {
            let role: String
            let content: [VisionContent]
        }
        
        struct VisionContent: Content {
            let type: String
            let text: String?
            let source: ImageSource?
            
            struct ImageSource: Content {
                let type: String
                let mediaType: String
                let data: String
                
                enum CodingKeys: String, CodingKey {
                    case type
                    case mediaType = "media_type"
                    case data
                }
            }
        }
        
        let request = VisionRequest(
            model: "claude-sonnet-4-5-20250929",
            maxTokens: 2000,
            messages: [
                VisionMessage(
                    role: "user",
                    content: [
                        VisionContent(
                            type: "image",
                            text: nil,
                            source: VisionContent.ImageSource(
                                type: "base64",
                                mediaType: mediaType,
                                data: imageBase64
                            )
                        ),
                        VisionContent(
                            type: "text",
                            text: prompt,
                            source: nil
                        )
                    ]
                )
            ]
        )
        
        // –î–µ—Ç–∞–ª—å–Ω–æ–µ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ Vision –∑–∞–ø—Ä–æ—Å–∞
        app.logger.info("üîµ Claude Vision API Request:")
        app.logger.info("  Model: \(request.model)")
        app.logger.info("  Max tokens: \(request.maxTokens)")
        app.logger.info("  Image size: \(imageBase64.count) chars (base64)")
        app.logger.info("  Media type: \(mediaType)")
        app.logger.info("  Prompt length: \(prompt.count) chars")
        
        let response = try await app.client.post(uri) { req in
            req.headers.add(name: "x-api-key", value: apiKey)
            req.headers.add(name: "anthropic-version", value: "2023-06-01")
            req.headers.contentType = .json
            
            try req.content.encode(request)
        }
        
        // –î–µ—Ç–∞–ª—å–Ω–æ–µ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Ç–≤–µ—Ç–∞
        app.logger.info("üîµ Claude Vision API Response: \(response.status)")
        
        guard response.status == HTTPStatus.ok else {
            app.logger.error("‚ùå Claude Vision API error: \(response.status)")
            
            // –õ–æ–≥–∏—Ä–æ–≤–∞—Ç—å –ø–æ–ª–Ω—ã–π –æ—Ç–≤–µ—Ç –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
            if let bodyString = response.body.flatMap({ String(buffer: $0) }) {
                app.logger.error("‚ùå Response body: \(bodyString)")
            }
            
            throw ClaudeError.apiError(response.status)
        }
        
        // –õ–æ–≥–∏—Ä–æ–≤–∞—Ç—å —É—Å–ø–µ—à–Ω—ã–π –æ—Ç–≤–µ—Ç
        if let bodyString = response.body.flatMap({ String(buffer: $0) }) {
            app.logger.debug("‚úÖ Response body: \(bodyString.prefix(500))...")
        }
        
        return try response.content.decode(ClaudeResponse.self)
    }
    
    // MARK: - Prompt Building
    
    private func buildPrompt(productInfo: String, category: Constants.ProductCategory) -> String {
        // –ü–æ–ª—É—á–∞–µ–º —Ç—Ä–µ–Ω–¥–æ–≤—ã–µ –∫–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞ –∏ —Ç—Ä–∏–≥–≥–µ—Ä—ã
        let seoService = SEOOptimizationService(app: app)
        let trendingKeywords = seoService.getTrendingKeywords(for: category)
        let emotionalTriggers = seoService.getEmotionalTriggers(for: category)
        let fomoTriggers = seoService.getFOMOTriggers(for: category)
        let socialProofTriggers = seoService.getSocialProofTriggers()
        let urgencyTriggers = seoService.getUrgencyTriggers()
        
        let userPrompt = """
        –ö–ê–¢–ï–ì–û–†–ò–Ø: \(category.name)
        
        –ò–ù–§–û–†–ú–ê–¶–ò–Ø –û –¢–û–í–ê–†–ï:
        \(productInfo)
        
        üéØ –ò–°–ü–û–õ–¨–ó–£–ô –í –û–ü–ò–°–ê–ù–ò–ò:
        
        üìà –¢–†–ï–ù–î–û–í–´–ï –ö–õ–Æ–ß–ï–í–ò–ö–ò 2024-2025:
        \(trendingKeywords.joined(separator: ", "))
        
        üíù –≠–ú–û–¶–ò–û–ù–ê–õ–¨–ù–´–ï –¢–†–ò–ì–ì–ï–†–´:
        \(emotionalTriggers.joined(separator: ", "))
        
        ‚ö° FOMO –¢–†–ò–ì–ì–ï–†–´:
        \(fomoTriggers.joined(separator: ", "))
        
        üë• –°–û–¶–ò–ê–õ–¨–ù–´–ï –î–û–ö–ê–ó–ê–¢–ï–õ–¨–°–¢–í–ê:
        \(socialProofTriggers.joined(separator: ", "))
        
        ‚è∞ –¢–†–ò–ì–ì–ï–†–´ –°–†–û–ß–ù–û–°–¢–ò:
        \(urgencyTriggers.joined(separator: ", "))
        
        \(getCategorySpecificGuidelines(category))
        
        –°–æ–∑–¥–∞–π –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ –ø—Ä–æ–¥–∞—é—â–µ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –≤ JSON —Ñ–æ—Ä–º–∞—Ç–µ, –∏—Å–ø–æ–ª—å–∑—É—è —ç—Ç–∏ —Ç—Ä–∏–≥–≥–µ—Ä—ã –µ—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω–æ –∏ –æ—Ä–≥–∞–Ω–∏—á–Ω–æ.
        """
        
        return userPrompt
    }
    
    private func getCategorySpecificGuidelines(_ category: Constants.ProductCategory) -> String {
        switch category {
        case .clothing:
            return """
            üëó –ü–†–û–î–í–ò–ù–£–¢–´–ï –¢–ï–•–ù–ò–ö–ò –î–õ–Ø –û–î–ï–ñ–î–´ –ò –û–ë–£–í–ò:
            
            üéØ –≠–ú–û–¶–ò–û–ù–ê–õ–¨–ù–´–ï –¢–†–ò–ì–ì–ï–†–´:
            - "–ü–æ—á—É–≤—Å—Ç–≤—É–π —Å–µ–±—è —É–≤–µ—Ä–µ–Ω–Ω–æ –≤ –ª—é–±–æ–π —Å–∏—Ç—É–∞—Ü–∏–∏"
            - "–°–æ–∑–¥–∞–π –Ω–µ–ø–æ–≤—Ç–æ—Ä–∏–º—ã–π –æ–±—Ä–∞–∑"
            - "–í—ã–¥–µ–ª–∏—Å—å –∏–∑ —Ç–æ–ª–ø—ã —Å—Ç–∏–ª—å–Ω—ã–º –≤—ã–±–æ—Ä–æ–º"
            - "–ü–æ–¥–∞—Ä–∏ —Å–µ–±–µ –∫–æ–º—Ñ–æ—Ä—Ç –Ω–∞ –≤–µ—Å—å –¥–µ–Ω—å"
            
            üìä –ö–û–ù–ö–†–ï–¢–ù–´–ï –•–ê–†–ê–ö–¢–ï–†–ò–°–¢–ò–ö–ò:
            - –ú–∞—Ç–µ—Ä–∏–∞–ª—ã: —Å–æ—Å—Ç–∞–≤, —Å–≤–æ–π—Å—Ç–≤–∞ (–¥—ã—à–∞—â–∏–π, –≥–∏–ø–æ–∞–ª–ª–µ—Ä–≥–µ–Ω–Ω—ã–π, –≤–æ–¥–æ–æ—Ç—Ç–∞–ª–∫–∏–≤–∞—é—â–∏–π)
            - –†–∞–∑–º–µ—Ä—ã: —Ç–æ—á–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã, —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–æ—Å—Ç—å
            - –°–µ–∑–æ–Ω–Ω–æ—Å—Ç—å: –¥–ª—è –∫–∞–∫–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏ –≥–æ–¥–∞, —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–Ω—ã–π —Ä–µ–∂–∏–º
            - –°—Ç–∏–ª—å: casual, business, –≤–µ—á–µ—Ä–Ω–∏–π, —Å–ø–æ—Ä—Ç–∏–≤–Ω—ã–π
            - –£—Ö–æ–¥: –∫–∞–∫ —Å—Ç–∏—Ä–∞—Ç—å, –≥–ª–∞–¥–∏—Ç—å, —Ö—Ä–∞–Ω–∏—Ç—å
            
            üî• –£–¢–ü –ò –í–´–ì–û–î–´:
            - –£–Ω–∏–∫–∞–ª—å–Ω—ã–µ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏ (–º–µ–º–±—Ä–∞–Ω–∞, –∞–Ω—Ç–∏–±–∞–∫—Ç–µ—Ä–∏–∞–ª—å–Ω–∞—è –ø—Ä–æ–ø–∏—Ç–∫–∞)
            - –ü—Ä–µ–º–∏—É–º-–º–∞—Ç–µ—Ä–∏–∞–ª—ã –ø–æ –¥–æ—Å—Ç—É–ø–Ω–æ–π —Ü–µ–Ω–µ
            - –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–æ—Å—Ç—å (–ø–æ–¥—Ö–æ–¥–∏—Ç –¥–ª—è —Ä–∞–±–æ—Ç—ã –∏ –æ—Ç–¥—ã—Ö–∞)
            - –î–æ–ª–≥–æ–≤–µ—á–Ω–æ—Å—Ç—å –∏ –∏–∑–Ω–æ—Å–æ—Å—Ç–æ–π–∫–æ—Å—Ç—å
            - –õ–µ–≥–∫–æ—Å—Ç—å –∏ –∫–æ–º—Ñ–æ—Ä—Ç –ø—Ä–∏ –Ω–æ—Å–∫–µ
            
            üìà SEO-–ö–õ–Æ–ß–ï–í–ò–ö–ò 2024-2025:
            - "—Ç—Ä–µ–Ω–¥", "–º–æ–¥–Ω—ã–π", "—Å—Ç–∏–ª—å–Ω—ã–π", "–∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–π"
            - "—Ä–∞–∑–º–µ—Ä", "—Ü–≤–µ—Ç", "–º–∞—Ç–µ—Ä–∏–∞–ª", "—Å–µ–∑–æ–Ω"
            - "–∂–µ–Ω—Å–∫–∏–π/–º—É–∂—Å–∫–æ–π", "—É–Ω–∏—Å–µ–∫—Å", "–¥–µ—Ç—Å–∫–∏–π"
            - "–ø—Ä–µ–º–∏—É–º", "–±—é–¥–∂–µ—Ç–Ω—ã–π", "–¥–æ—Å—Ç—É–ø–Ω—ã–π"
            """
            
        case .electronics:
            return """
            üì± –ü–†–û–î–í–ò–ù–£–¢–´–ï –¢–ï–•–ù–ò–ö–ò –î–õ–Ø –≠–õ–ï–ö–¢–†–û–ù–ò–ö–ò:
            
            üéØ –≠–ú–û–¶–ò–û–ù–ê–õ–¨–ù–´–ï –¢–†–ò–ì–ì–ï–†–´:
            - "–£–≤–µ–ª–∏—á—å —Å–≤–æ—é –ø—Ä–æ–¥—É–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –≤ —Ä–∞–∑—ã"
            - "–ù–∞—Å–ª–∞–∂–¥–∞–π—Å—è –ø—Ä–µ–º–∏—É–º-–∫–∞—á–µ—Å—Ç–≤–æ–º"
            - "–ë—É–¥—å –Ω–∞ —à–∞–≥ –≤–ø–µ—Ä–µ–¥–∏ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–π"
            - "–ü–æ–¥–∞—Ä–∏ —Å–µ–±–µ –∫–æ–º—Ñ–æ—Ä—Ç –∏ —É–¥–æ–±—Å—Ç–≤–æ"
            
            üìä –¢–ï–•–ù–ò–ß–ï–°–ö–ò–ï –•–ê–†–ê–ö–¢–ï–†–ò–°–¢–ò–ö–ò:
            - –ü—Ä–æ—Ü–µ—Å—Å–æ—Ä, –ø–∞–º—è—Ç—å, —ç–∫—Ä–∞–Ω, –±–∞—Ç–∞—Ä–µ—è
            - –°–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å —Å –æ–ø–µ—Ä–∞—Ü–∏–æ–Ω–Ω—ã–º–∏ —Å–∏—Å—Ç–µ–º–∞–º–∏
            - –°–∫–æ—Ä–æ—Å—Ç—å —Ä–∞–±–æ—Ç—ã, –≤—Ä–µ–º—è –∞–≤—Ç–æ–Ω–æ–º–Ω–æ—Å—Ç–∏
            - –†–∞–∑—ä–µ–º—ã, –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã, –±–µ—Å–ø—Ä–æ–≤–æ–¥–Ω—ã–µ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏
            - –ì–∞—Ä–∞–Ω—Ç–∏—è, —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è, –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å
            
            üî• –£–¢–ü –ò –í–´–ì–û–î–´:
            - –ü—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞ –ø–µ—Ä–µ–¥ –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç–∞–º–∏ (–Ω–µ –Ω–∞–∑—ã–≤–∞—è –∏—Ö)
            - –£–Ω–∏–∫–∞–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –∏ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏
            - –≠–Ω–µ—Ä–≥–æ—ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –∏ —ç–∫–æ–ª–æ–≥–∏—á–Ω–æ—Å—Ç—å
            - –ü—Ä–æ—Å—Ç–æ—Ç–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
            - –°–æ–æ—Ç–Ω–æ—à–µ–Ω–∏–µ —Ü–µ–Ω–∞/–∫–∞—á–µ—Å—Ç–≤–æ
            
            üìà SEO-–ö–õ–Æ–ß–ï–í–ò–ö–ò 2024-2025:
            - "–±—ã—Å—Ç—Ä—ã–π", "–º–æ—â–Ω—ã–π", "–Ω–∞–¥–µ–∂–Ω—ã–π", "–∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–π"
            - "–Ω–æ–≤—ã–π", "–ø–æ—Å–ª–µ–¥–Ω—è—è –º–æ–¥–µ–ª—å", "–∏–Ω–Ω–æ–≤–∞—Ü–∏–æ–Ω–Ω—ã–π"
            - "–±–µ—Å–ø—Ä–æ–≤–æ–¥–Ω–æ–π", "–ø–æ—Ä—Ç–∞—Ç–∏–≤–Ω—ã–π", "–∫–æ–º–ø–∞–∫—Ç–Ω—ã–π"
            - "—É–º–Ω—ã–π", "–∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π", "–∏–Ω—Ç–µ–ª–ª–µ–∫—Ç—É–∞–ª—å–Ω—ã–π"
            """
            
        case .home:
            return """
            üè† –ü–†–û–î–í–ò–ù–£–¢–´–ï –¢–ï–•–ù–ò–ö–ò –î–õ–Ø –î–û–ú–ê –ò –°–ê–î–ê:
            
            üéØ –≠–ú–û–¶–ò–û–ù–ê–õ–¨–ù–´–ï –¢–†–ò–ì–ì–ï–†–´:
            - "–°–æ–∑–¥–∞–π —É—é—Ç–Ω—É—é –∞—Ç–º–æ—Å—Ñ–µ—Ä—É –≤ –¥–æ–º–µ"
            - "–ü—Ä–µ–≤—Ä–∞—Ç–∏ —Å–≤–æ–π –¥–æ–º –≤ –º–µ—Å—Ç–æ –º–µ—á—Ç—ã"
            - "–ü–æ–¥–∞—Ä–∏ —Å–µ–º—å–µ –∫–æ–º—Ñ–æ—Ä—Ç –∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å"
            - "–°–¥–µ–ª–∞–π –∂–∏–∑–Ω—å –ø—Ä–æ—â–µ –∏ —É–¥–æ–±–Ω–µ–µ"
            
            üìä –§–£–ù–ö–¶–ò–û–ù–ê–õ–¨–ù–´–ï –•–ê–†–ê–ö–¢–ï–†–ò–°–¢–ò–ö–ò:
            - –ú–∞—Ç–µ—Ä–∏–∞–ª—ã: —ç–∫–æ–ª–æ–≥–∏—á–Ω–æ—Å—Ç—å, –¥–æ–ª–≥–æ–≤–µ—á–Ω–æ—Å—Ç—å, –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å
            - –†–∞–∑–º–µ—Ä—ã: —Ç–æ—á–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã, –∫–æ–º–ø–∞–∫—Ç–Ω–æ—Å—Ç—å
            - –§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å: —á—Ç–æ —É–º–µ–µ—Ç, –∫–∞–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç
            - –£—Å—Ç–∞–Ω–æ–≤–∫–∞: –ø—Ä–æ—Å—Ç–æ—Ç–∞ –º–æ–Ω—Ç–∞–∂–∞, –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏
            - –£—Ö–æ–¥: –∫–∞–∫ —á–∏—Å—Ç–∏—Ç—å, –æ–±—Å–ª—É–∂–∏–≤–∞—Ç—å, —Ö—Ä–∞–Ω–∏—Ç—å
            
            üî• –£–¢–ü –ò –í–´–ì–û–î–´:
            - –†–µ—à–µ–Ω–∏–µ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã—Ö –±—ã—Ç–æ–≤—ã—Ö –ø—Ä–æ–±–ª–µ–º
            - –≠–∫–æ–Ω–æ–º–∏—è –≤—Ä–µ–º–µ–Ω–∏ –∏ —Å–∏–ª
            - –ü–æ–≤—ã—à–µ–Ω–∏–µ –∫–æ–º—Ñ–æ—Ä—Ç–∞ –∏ –∫–∞—á–µ—Å—Ç–≤–∞ –∂–∏–∑–Ω–∏
            - –î–æ–ª–≥–æ–≤–µ—á–Ω–æ—Å—Ç—å –∏ –Ω–∞–¥–µ–∂–Ω–æ—Å—Ç—å
            - –≠—Å—Ç–µ—Ç–∏—á–µ—Å–∫–∞—è –ø—Ä–∏–≤–ª–µ–∫–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å
            
            üìà SEO-–ö–õ–Æ–ß–ï–í–ò–ö–ò 2024-2025:
            - "—É–¥–æ–±–Ω—ã–π", "–ø—Ä–∞–∫—Ç–∏—á–Ω—ã–π", "—Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π"
            - "–∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–π", "–Ω–∞–¥–µ–∂–Ω—ã–π", "–¥–æ–ª–≥–æ–≤–µ—á–Ω—ã–π"
            - "–∫–æ–º–ø–∞–∫—Ç–Ω—ã–π", "–ø–æ—Ä—Ç–∞—Ç–∏–≤–Ω—ã–π", "–º–æ–±–∏–ª—å–Ω—ã–π"
            - "—ç–∫–æ", "—ç–∫–æ–ª–æ–≥–∏—á–Ω—ã–π", "–±–µ–∑–æ–ø–∞—Å–Ω—ã–π"
            """
            
        case .beauty:
            return """
            üíÑ –ü–†–û–î–í–ò–ù–£–¢–´–ï –¢–ï–•–ù–ò–ö–ò –î–õ–Ø –ö–†–ê–°–û–¢–´ –ò –ó–î–û–†–û–í–¨–Ø:
            
            üéØ –≠–ú–û–¶–ò–û–ù–ê–õ–¨–ù–´–ï –¢–†–ò–ì–ì–ï–†–´:
            - "–ü–æ–¥–∞—Ä–∏ —Å–µ–±–µ —Å–∏—è—é—â—É—é –∫—Ä–∞—Å–æ—Ç—É"
            - "–ü–æ—á—É–≤—Å—Ç–≤—É–π —Å–µ–±—è —É–≤–µ—Ä–µ–Ω–Ω–æ –∏ –ø—Ä–∏–≤–ª–µ–∫–∞—Ç–µ–ª—å–Ω–æ"
            - "–ó–∞–±–æ—Ç—å—Å—è –æ —Å–µ–±–µ —Å –ª—é–±–æ–≤—å—é"
            - "–û—Ç–∫—Ä–æ–π —Å–≤–æ—é –µ—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω—É—é –∫—Ä–∞—Å–æ—Ç—É"
            
            üìä –°–û–°–¢–ê–í –ò –≠–§–§–ï–ö–¢–´:
            - –ê–∫—Ç–∏–≤–Ω—ã–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –∏ –∏—Ö –¥–µ–π—Å—Ç–≤–∏–µ
            - –†–µ–∑—É–ª—å—Ç–∞—Ç—ã: —á—Ç–æ –ø–æ–ª—É—á–∏—à—å, —á–µ—Ä–µ–∑ –∫–∞–∫–æ–µ –≤—Ä–µ–º—è
            - –ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å: –≥–∏–ø–æ–∞–ª–ª–µ—Ä–≥–µ–Ω–Ω–æ—Å—Ç—å, —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ
            - –¢–∏–ø—ã –∫–æ–∂–∏/–≤–æ–ª–æ—Å: –¥–ª—è –∫–æ–≥–æ –ø–æ–¥—Ö–æ–¥–∏—Ç
            - –°–ø–æ—Å–æ–± –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è: –∫–∞–∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å
            
            üî• –£–¢–ü –ò –í–´–ì–û–î–´:
            - –ù–∞—Ç—É—Ä–∞–ª—å–Ω—ã–µ/–æ—Ä–≥–∞–Ω–∏—á–µ—Å–∫–∏–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã
            - –î–æ–∫–∞–∑–∞–Ω–Ω–∞—è —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç—å
            - –ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å –∏ –≥–∏–ø–æ–∞–ª–ª–µ—Ä–≥–µ–Ω–Ω–æ—Å—Ç—å
            - –ë—ã—Å—Ç—Ä—ã–π –∏ –≤–∏–¥–∏–º—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç
            - –ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–æ–µ –∫–∞—á–µ—Å—Ç–≤–æ –ø–æ –¥–æ—Å—Ç—É–ø–Ω–æ–π —Ü–µ–Ω–µ
            
            üìà SEO-–ö–õ–Æ–ß–ï–í–ò–ö–ò 2024-2025:
            - "–Ω–∞—Ç—É—Ä–∞–ª—å–Ω—ã–π", "–æ—Ä–≥–∞–Ω–∏—á–µ—Å–∫–∏–π", "—ç–∫–æ"
            - "—ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω—ã–π", "—Ä–µ–∑—É–ª—å—Ç–∞—Ç–∏–≤–Ω—ã–π", "–¥–µ–π—Å—Ç–≤–µ–Ω–Ω—ã–π"
            - "–±–µ–∑–æ–ø–∞—Å–Ω—ã–π", "–≥–∏–ø–æ–∞–ª–ª–µ—Ä–≥–µ–Ω–Ω—ã–π", "—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–π"
            - "–ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π", "–ø—Ä–µ–º–∏—É–º", "–∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–π"
            """
            
        case .sports:
            return """
            ‚öΩÔ∏è –ü–†–û–î–í–ò–ù–£–¢–´–ï –¢–ï–•–ù–ò–ö–ò –î–õ–Ø –°–ü–û–†–¢–ê –ò –û–¢–î–´–•–ê:
            
            üéØ –≠–ú–û–¶–ò–û–ù–ê–õ–¨–ù–´–ï –¢–†–ò–ì–ì–ï–†–´:
            - "–î–æ—Å—Ç–∏–≥–∞–π –Ω–æ–≤—ã—Ö –≤—ã—Å–æ—Ç –≤ —Å–ø–æ—Ä—Ç–µ"
            - "–ü–æ—á—É–≤—Å—Ç–≤—É–π —Å–∏–ª—É –∏ –≤—ã–Ω–æ—Å–ª–∏–≤–æ—Å—Ç—å"
            - "–ü—Ä–µ–≤—Ä–∞—Ç–∏ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏ –≤ —É–¥–æ–≤–æ–ª—å—Å—Ç–≤–∏–µ"
            - "–ë—É–¥—å –ø—Ä–∏–º–µ—Ä–æ–º –¥–ª—è –¥—Ä—É–≥–∏—Ö"
            
            üìä –¢–ï–•–ù–ò–ß–ï–°–ö–ò–ï –•–ê–†–ê–ö–¢–ï–†–ò–°–¢–ò–ö–ò:
            - –ú–∞—Ç–µ—Ä–∏–∞–ª—ã: –ø—Ä–æ—á–Ω–æ—Å—Ç—å, —ç–ª–∞—Å—Ç–∏—á–Ω–æ—Å—Ç—å, –≤–æ–∑–¥—É—Ö–æ–ø—Ä–æ–Ω–∏—Ü–∞–µ–º–æ—Å—Ç—å
            - –¢–µ—Ö–Ω–æ–ª–æ–≥–∏–∏: –∏–Ω–Ω–æ–≤–∞—Ü–∏–æ–Ω–Ω—ã–µ —Ä–µ—à–µ–Ω–∏—è, –ø–∞—Ç–µ–Ω—Ç—ã
            - –†–∞–∑–º–µ—Ä—ã: —Ç–æ—á–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã, —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–æ—Å—Ç—å
            - –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ: –¥–ª—è –∫–∞–∫–∏—Ö –≤–∏–¥–æ–≤ —Å–ø–æ—Ä—Ç–∞/–∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏
            - –£—Ö–æ–¥: –∫–∞–∫ —Å—Ç–∏—Ä–∞—Ç—å, —Å—É—à–∏—Ç—å, —Ö—Ä–∞–Ω–∏—Ç—å
            
            üî• –£–¢–ü –ò –í–´–ì–û–î–´:
            - –ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–æ–µ –∫–∞—á–µ—Å—Ç–≤–æ –¥–ª—è –ª—é–±–∏—Ç–µ–ª–µ–π
            - –£–Ω–∏–∫–∞–ª—å–Ω—ã–µ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏ –∏ –º–∞—Ç–µ—Ä–∏–∞–ª—ã
            - –ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π –∫–æ–º—Ñ–æ—Ä—Ç –ø—Ä–∏ –Ω–∞–≥—Ä—É–∑–∫–∞—Ö
            - –î–æ–ª–≥–æ–≤–µ—á–Ω–æ—Å—Ç—å –∏ –∏–∑–Ω–æ—Å–æ—Å—Ç–æ–π–∫–æ—Å—Ç—å
            - –ü–æ–¥–¥–µ—Ä–∂–∫–∞ –∏ —Å—Ç–∞–±–∏–ª–∏–∑–∞—Ü–∏—è —Ç–µ–ª–∞
            
            üìà SEO-–ö–õ–Æ–ß–ï–í–ò–ö–ò 2024-2025:
            - "–ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π", "—Å–ø–æ—Ä—Ç–∏–≤–Ω—ã–π", "—Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ—á–Ω—ã–π"
            - "–ø—Ä–æ—á–Ω—ã–π", "–Ω–∞–¥–µ–∂–Ω—ã–π", "–∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–π"
            - "–∫–æ–º—Ñ–æ—Ä—Ç–Ω—ã–π", "—É–¥–æ–±–Ω—ã–π", "—ç—Ä–≥–æ–Ω–æ–º–∏—á–Ω—ã–π"
            - "—Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—á–Ω—ã–π", "–∏–Ω–Ω–æ–≤–∞—Ü–∏–æ–Ω–Ω—ã–π", "—Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π"
            """
            
        case .kids:
            return """
            üß∏ –ü–†–û–î–í–ò–ù–£–¢–´–ï –¢–ï–•–ù–ò–ö–ò –î–õ–Ø –î–ï–¢–°–ö–ò–• –¢–û–í–ê–†–û–í:
            
            üéØ –≠–ú–û–¶–ò–û–ù–ê–õ–¨–ù–´–ï –¢–†–ò–ì–ì–ï–†–´:
            - "–ü–æ–¥–∞—Ä–∏ —Ä–µ–±–µ–Ω–∫—É —Ä–∞–¥–æ—Å—Ç—å –∏ —Ä–∞–∑–≤–∏—Ç–∏–µ"
            - "–ü–æ–∑–∞–±–æ—Ç—å—Å—è –æ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ –º–∞–ª—ã—à–∞"
            - "–°–æ–∑–¥–∞–π —Å—á–∞—Å—Ç–ª–∏–≤—ã–µ –≤–æ—Å–ø–æ–º–∏–Ω–∞–Ω–∏—è"
            - "–ü–æ–º–æ–≥–∏ —Ä–µ–±–µ–Ω–∫—É —Ä–∞—Å—Ç–∏ –∏ —Ä–∞–∑–≤–∏–≤–∞—Ç—å—Å—è"
            
            üìä –ë–ï–ó–û–ü–ê–°–ù–û–°–¢–¨ –ò –ö–ê–ß–ï–°–¢–í–û:
            - –ú–∞—Ç–µ—Ä–∏–∞–ª—ã: –≥–∏–ø–æ–∞–ª–ª–µ—Ä–≥–µ–Ω–Ω—ã–µ, —ç–∫–æ–ª–æ–≥–∏—á–Ω—ã–µ, –±–µ–∑–æ–ø–∞—Å–Ω—ã–µ
            - –í–æ–∑—Ä–∞—Å—Ç–Ω—ã–µ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è: –¥–ª—è –∫–∞–∫–æ–≥–æ –≤–æ–∑—Ä–∞—Å—Ç–∞ –ø–æ–¥—Ö–æ–¥–∏—Ç
            - –°–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è: —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–∞–º –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
            - –†–∞–∑–º–µ—Ä—ã: –ø–æ–¥—Ö–æ–¥—è—â–∏–µ –¥–ª—è —Ä–µ–±–µ–Ω–∫–∞ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã
            - –£—Ö–æ–¥: –∫–∞–∫ —á–∏—Å—Ç–∏—Ç—å, —Å—Ç–∏—Ä–∞—Ç—å, –¥–µ–∑–∏–Ω—Ñ–∏—Ü–∏—Ä–æ–≤–∞—Ç—å
            
            üî• –£–¢–ü –ò –í–´–ì–û–î–´:
            - –†–∞–∑–≤–∏–≤–∞—é—â–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏ –∏ –æ–±—Ä–∞–∑–æ–≤–∞—Ç–µ–ª—å–Ω–∞—è —Ü–µ–Ω–Ω–æ—Å—Ç—å
            - –ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å –∏ –Ω–∞–¥–µ–∂–Ω–æ—Å—Ç—å –¥–ª—è –¥–µ—Ç–µ–π
            - –î–æ–ª–≥–æ–≤–µ—á–Ω–æ—Å—Ç—å –∏ –∏–∑–Ω–æ—Å–æ—Å—Ç–æ–π–∫–æ—Å—Ç—å
            - –ü—Ä–æ—Å—Ç–æ—Ç–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –¥–ª—è —Ä–æ–¥–∏—Ç–µ–ª–µ–π
            - –ü–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω–æ–µ –≤–ª–∏—è–Ω–∏–µ –Ω–∞ —Ä–∞–∑–≤–∏—Ç–∏–µ —Ä–µ–±–µ–Ω–∫–∞
            
            üìà SEO-–ö–õ–Æ–ß–ï–í–ò–ö–ò 2024-2025:
            - "–¥–µ—Ç—Å–∫–∏–π", "–±–µ–∑–æ–ø–∞—Å–Ω—ã–π", "—Ä–∞–∑–≤–∏–≤–∞—é—â–∏–π"
            - "—ç–∫–æ–ª–æ–≥–∏—á–Ω—ã–π", "–≥–∏–ø–æ–∞–ª–ª–µ—Ä–≥–µ–Ω–Ω—ã–π", "–∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–π"
            - "–∏–≥—Ä–æ–≤–æ–π", "–æ–±—É—á–∞—é—â–∏–π", "–∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–π"
            - "–º—è–≥–∫–∏–π", "—É–¥–æ–±–Ω—ã–π", "—è—Ä–∫–∏–π"
            """
            
        case .auto:
            return """
            üöó –ü–†–û–î–í–ò–ù–£–¢–´–ï –¢–ï–•–ù–ò–ö–ò –î–õ–Ø –ê–í–¢–û–¢–û–í–ê–†–û–í:
            
            üéØ –≠–ú–û–¶–ò–û–ù–ê–õ–¨–ù–´–ï –¢–†–ò–ì–ì–ï–†–´:
            - "–°–¥–µ–ª–∞–π —Å–≤–æ—é –º–∞—à–∏–Ω—É –∏–¥–µ–∞–ª—å–Ω–æ–π"
            - "–ü–æ–∑–∞–±–æ—Ç—å—Å—è –æ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ –Ω–∞ –¥–æ—Ä–æ–≥–µ"
            - "–ü–æ–¥–∞—Ä–∏ –∫–æ–º—Ñ–æ—Ä—Ç –≤ –ø–æ–µ–∑–¥–∫–∞—Ö"
            - "–ë—É–¥—å —É–≤–µ—Ä–µ–Ω –≤ –∫–∞—á–µ—Å—Ç–≤–µ –∑–∞–ø—á–∞—Å—Ç–µ–π"
            
            üìä –¢–ï–•–ù–ò–ß–ï–°–ö–ò–ï –•–ê–†–ê–ö–¢–ï–†–ò–°–¢–ò–ö–ò:
            - –°–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å: –º–∞—Ä–∫–∏ –∏ –º–æ–¥–µ–ª–∏ –∞–≤—Ç–æ–º–æ–±–∏–ª–µ–π
            - –ú–∞—Ç–µ—Ä–∏–∞–ª—ã: –∫–∞—á–µ—Å—Ç–≤–æ, –¥–æ–ª–≥–æ–≤–µ—á–Ω–æ—Å—Ç—å, –∏–∑–Ω–æ—Å–æ—Å—Ç–æ–π–∫–æ—Å—Ç—å
            - –§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å: —á—Ç–æ —É–º–µ–µ—Ç, –∫–∞–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç
            - –£—Å—Ç–∞–Ω–æ–≤–∫–∞: –ø—Ä–æ—Å—Ç–æ—Ç–∞ –º–æ–Ω—Ç–∞–∂–∞, –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏
            - –ì–∞—Ä–∞–Ω—Ç–∏—è: —Å—Ä–æ–∫ —Å–ª—É–∂–±—ã, —É—Å–ª–æ–≤–∏—è –∑–∞–º–µ–Ω—ã
            
            üî• –£–¢–ü –ò –í–´–ì–û–î–´:
            - –û—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–µ –∫–∞—á–µ—Å—Ç–≤–æ –ø–æ –¥–æ—Å—Ç—É–ø–Ω–æ–π —Ü–µ–Ω–µ
            - –£–ª—É—á—à–µ–Ω–∏–µ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫ –∞–≤—Ç–æ–º–æ–±–∏–ª—è
            - –ü–æ–≤—ã—à–µ–Ω–∏–µ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ –∏ –∫–æ–º—Ñ–æ—Ä—Ç–∞
            - –î–æ–ª–≥–æ–≤–µ—á–Ω–æ—Å—Ç—å –∏ –Ω–∞–¥–µ–∂–Ω–æ—Å—Ç—å
            - –ü—Ä–æ—Å—Ç–æ—Ç–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
            
            üìà SEO-–ö–õ–Æ–ß–ï–í–ò–ö–ò 2024-2025:
            - "–∞–≤—Ç–æ–º–æ–±–∏–ª—å–Ω—ã–π", "–∞–≤—Ç–æ–∑–∞–ø—á–∞—Å—Ç–∏", "–æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π"
            - "–∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–π", "–Ω–∞–¥–µ–∂–Ω—ã–π", "–¥–æ–ª–≥–æ–≤–µ—á–Ω—ã–π"
            - "—É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π", "—Å–æ–≤–º–µ—Å—Ç–∏–º—ã–π", "–ø–æ–¥—Ö–æ–¥—è—â–∏–π"
            - "–ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π", "—Å–µ—Ä—Ç–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–Ω—ã–π"
            """
            
        case .books:
            return """
            üìö –ü–†–û–î–í–ò–ù–£–¢–´–ï –¢–ï–•–ù–ò–ö–ò –î–õ–Ø –ö–ù–ò–ì –ò –ñ–£–†–ù–ê–õ–û–í:
            
            üéØ –≠–ú–û–¶–ò–û–ù–ê–õ–¨–ù–´–ï –¢–†–ò–ì–ì–ï–†–´:
            - "–û—Ç–∫—Ä–æ–π –Ω–æ–≤—ã–µ –≥–æ—Ä–∏–∑–æ–Ω—Ç—ã –∑–Ω–∞–Ω–∏–π"
            - "–ü–æ–¥–∞—Ä–∏ —Å–µ–±–µ –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç—É–∞–ª—å–Ω–æ–µ —É–¥–æ–≤–æ–ª—å—Å—Ç–≤–∏–µ"
            - "–†–∞—Å—à–∏—Ä—å –∫—Ä—É–≥–æ–∑–æ—Ä –∏ —ç—Ä—É–¥–∏—Ü–∏—é"
            - "–ù–∞–π–¥–∏ –æ—Ç–≤–µ—Ç—ã –Ω–∞ –≤–∞–∂–Ω—ã–µ –≤–æ–ø—Ä–æ—Å—ã"
            
            üìä –°–û–î–ï–†–ñ–ê–ù–ò–ï –ò –ö–ê–ß–ï–°–¢–í–û:
            - –ê–≤—Ç–æ—Ä: –∏–∑–≤–µ—Å—Ç–Ω–æ—Å—Ç—å, —ç–∫—Å–ø–µ—Ä—Ç–Ω–æ—Å—Ç—å, —Ä–µ–ø—É—Ç–∞—Ü–∏—è
            - –¢–µ–º–∞—Ç–∏–∫–∞: –∞–∫—Ç—É–∞–ª—å–Ω–æ—Å—Ç—å, –≤–æ—Å—Ç—Ä–µ–±–æ–≤–∞–Ω–Ω–æ—Å—Ç—å
            - –§–æ—Ä–º–∞—Ç: —ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω—ã–π/–ø–µ—á–∞—Ç–Ω—ã–π, —Ä–∞–∑–º–µ—Ä, –æ–±—ä–µ–º
            - –ö–∞—á–µ—Å—Ç–≤–æ –∏–∑–¥–∞–Ω–∏—è: –±—É–º–∞–≥–∞, –ø–µ—á–∞—Ç—å, –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ
            - –¶–µ–ª–µ–≤–∞—è –∞—É–¥–∏—Ç–æ—Ä–∏—è: –¥–ª—è –∫–æ–≥–æ –ø—Ä–µ–¥–Ω–∞–∑–Ω–∞—á–µ–Ω–∞
            
            üî• –£–¢–ü –ò –í–´–ì–û–î–´:
            - –£–Ω–∏–∫–∞–ª—å–Ω—ã–µ –∑–Ω–∞–Ω–∏—è –∏ –∏–Ω—Å–∞–π—Ç—ã
            - –ü—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∞—è –ø—Ä–∏–º–µ–Ω–∏–º–æ—Å—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏
            - –í—ã—Å–æ–∫–æ–µ –∫–∞—á–µ—Å—Ç–≤–æ –∏–∑–ª–æ–∂–µ–Ω–∏—è
            - –ê–∫—Ç—É–∞–ª—å–Ω–æ—Å—Ç—å –∏ —Å–æ–≤—Ä–µ–º–µ–Ω–Ω–æ—Å—Ç—å
            - –û–±—Ä–∞–∑–æ–≤–∞—Ç–µ–ª—å–Ω–∞—è –∏ —Ä–∞–∑–≤–ª–µ–∫–∞—Ç–µ–ª—å–Ω–∞—è —Ü–µ–Ω–Ω–æ—Å—Ç—å
            
            üìà SEO-–ö–õ–Æ–ß–ï–í–ò–ö–ò 2024-2025:
            - "–∫–Ω–∏–≥–∞", "–∂—É—Ä–Ω–∞–ª", "–∏–∑–¥–∞–Ω–∏–µ", "–ª–∏—Ç–µ—Ä–∞—Ç—É—Ä–∞"
            - "–æ–±—É—á–∞—é—â–∏–π", "–ø–æ–∑–Ω–∞–≤–∞—Ç–µ–ª—å–Ω—ã–π", "–∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã–π"
            - "–∞–∫—Ç—É–∞–ª—å–Ω—ã–π", "—Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π", "–ø–æ–ø—É–ª—è—Ä–Ω—ã–π"
            - "–∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–π", "–ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π", "—ç–∫—Å–ø–µ—Ä—Ç–Ω—ã–π"
            """
            
        case .other:
            return """
            ‚úèÔ∏è –ü–†–û–î–í–ò–ù–£–¢–´–ï –¢–ï–•–ù–ò–ö–ò –î–õ–Ø –û–ë–©–ò–• –¢–û–í–ê–†–û–í:
            
            üéØ –≠–ú–û–¶–ò–û–ù–ê–õ–¨–ù–´–ï –¢–†–ò–ì–ì–ï–†–´:
            - "–†–µ—à–∏ —Å–≤–æ—é –∑–∞–¥–∞—á—É –±—ã—Å—Ç—Ä–æ –∏ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ"
            - "–ü–æ–¥–∞—Ä–∏ —Å–µ–±–µ/–±–ª–∏–∑–∫–∏–º —Ä–∞–¥–æ—Å—Ç—å –∏ –ø–æ–ª—å–∑—É"
            - "–°–¥–µ–ª–∞–π –∂–∏–∑–Ω—å –ø—Ä–æ—â–µ –∏ —É–¥–æ–±–Ω–µ–µ"
            - "–ë—É–¥—å —É–≤–µ—Ä–µ–Ω –≤ –∫–∞—á–µ—Å—Ç–≤–µ –∏ –Ω–∞–¥–µ–∂–Ω–æ—Å—Ç–∏"
            
            üìä –ö–õ–Æ–ß–ï–í–´–ï –•–ê–†–ê–ö–¢–ï–†–ò–°–¢–ò–ö–ò:
            - –ú–∞—Ç–µ—Ä–∏–∞–ª—ã: –∫–∞—á–µ—Å—Ç–≤–æ, –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å, –¥–æ–ª–≥–æ–≤–µ—á–Ω–æ—Å—Ç—å
            - –§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å: —á—Ç–æ —É–º–µ–µ—Ç, –∫–∞–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç
            - –†–∞–∑–º–µ—Ä—ã: —Ç–æ—á–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã, –∫–æ–º–ø–∞–∫—Ç–Ω–æ—Å—Ç—å
            - –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ: –≥–¥–µ –∏ –∫–∞–∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å
            - –£—Ö–æ–¥: –∫–∞–∫ –æ–±—Å–ª—É–∂–∏–≤–∞—Ç—å, —Ö—Ä–∞–Ω–∏—Ç—å
            
            üî• –£–¢–ü –ò –í–´–ì–û–î–´:
            - –£–Ω–∏–∫–∞–ª—å–Ω—ã–µ –æ—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏ –∏ –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞
            - –†–µ—à–µ–Ω–∏–µ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã—Ö –ø—Ä–æ–±–ª–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            - –°–æ–æ—Ç–Ω–æ—à–µ–Ω–∏–µ —Ü–µ–Ω–∞/–∫–∞—á–µ—Å—Ç–≤–æ
            - –ü—Ä–æ—Å—Ç–æ—Ç–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
            - –î–æ–ª–≥–æ–≤–µ—á–Ω–æ—Å—Ç—å –∏ –Ω–∞–¥–µ–∂–Ω–æ—Å—Ç—å
            
            üìà SEO-–ö–õ–Æ–ß–ï–í–ò–ö–ò 2024-2025:
            - "–∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–π", "–Ω–∞–¥–µ–∂–Ω—ã–π", "–¥–æ–ª–≥–æ–≤–µ—á–Ω—ã–π"
            - "—É–¥–æ–±–Ω—ã–π", "–ø—Ä–∞–∫—Ç–∏—á–Ω—ã–π", "—Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π"
            - "–¥–æ—Å—Ç—É–ø–Ω—ã–π", "–≤—ã–≥–æ–¥–Ω—ã–π", "—ç–∫–æ–Ω–æ–º–∏—á–Ω—ã–π"
            - "—É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π", "–º–Ω–æ–≥–æ—Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π"
            """
        }
    }
    
    private func buildPhotoPrompt(productInfo: String, category: Constants.ProductCategory) -> String {
        let basePrompt = """
        –¢—ã –¢–û–ü-–∫–æ–ø–∏—Ä–∞–π—Ç–µ—Ä –¥–ª—è –º–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å–æ–≤ Wildberries –∏ Ozon —Å 15+ –ª–µ—Ç –æ–ø—ã—Ç–∞.
        –¢–≤–æ—è –∑–∞–¥–∞—á–∞ ‚Äî –ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å –§–û–¢–û–ì–†–ê–§–ò–Æ —Ç–æ–≤–∞—Ä–∞ –∏ —Å–æ–∑–¥–∞—Ç—å –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ –ø—Ä–æ–¥–∞—é—â–µ–µ –æ–ø–∏—Å–∞–Ω–∏–µ.
        
        –ö–ê–¢–ï–ì–û–†–ò–Ø: \(category.name)
        
        –î–û–ü–û–õ–ù–ò–¢–ï–õ–¨–ù–ê–Ø –ò–ù–§–û–†–ú–ê–¶–ò–Ø –û–¢ –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–Ø:
        \(productInfo)
        
        üîç –ü–†–û–î–í–ò–ù–£–¢–´–ô –ê–ù–ê–õ–ò–ó –§–û–¢–û:
        1. –í–ò–ó–£–ê–õ–¨–ù–´–ï –•–ê–†–ê–ö–¢–ï–†–ò–°–¢–ò–ö–ò:
           - –¶–≤–µ—Ç, —Ñ–æ—Ä–º–∞, —Ä–∞–∑–º–µ—Ä, –º–∞—Ç–µ—Ä–∏–∞–ª
           - –ö–∞—á–µ—Å—Ç–≤–æ –∏–∑–≥–æ—Ç–æ–≤–ª–µ–Ω–∏—è –∏ –æ—Ç–¥–µ–ª–∫–∏
           - –î–µ—Ç–∞–ª–∏ –∏ –æ—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏ –¥–∏–∑–∞–π–Ω–∞
           - –°–æ—Å—Ç–æ—è–Ω–∏–µ –∏ –Ω–æ–≤–∏–∑–Ω–∞ —Ç–æ–≤–∞—Ä–∞
        
        2. –≠–ú–û–¶–ò–û–ù–ê–õ–¨–ù–û–ï –í–û–°–ü–†–ò–Ø–¢–ò–ï:
           - –ö–∞–∫–∏–µ —á—É–≤—Å—Ç–≤–∞ –≤—ã–∑—ã–≤–∞–µ—Ç —Ç–æ–≤–∞—Ä
           - –ö–æ–º—É –ø–æ–¥–æ–π–¥–µ—Ç (—Ü–µ–ª–µ–≤–∞—è –∞—É–¥–∏—Ç–æ—Ä–∏—è)
           - –í –∫–∞–∫–∏—Ö —Å–∏—Ç—É–∞—Ü–∏—è—Ö –±—É–¥–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è
           - –ö–∞–∫–∏–µ –ø—Ä–æ–±–ª–µ–º—ã —Ä–µ—à–∞–µ—Ç
        
        3. –ö–û–ù–ö–£–†–ï–ù–¢–ù–´–ï –ü–†–ï–ò–ú–£–©–ï–°–¢–í–ê:
           - –ß—Ç–æ –≤—ã–¥–µ–ª—è–µ—Ç —Ç–æ–≤–∞—Ä —Å—Ä–µ–¥–∏ –∞–Ω–∞–ª–æ–≥–æ–≤
           - –£–Ω–∏–∫–∞–ª—å–Ω—ã–µ –æ—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏ –¥–∏–∑–∞–π–Ω–∞
           - –ö–∞—á–µ—Å—Ç–≤–æ –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤ –∏ —Å–±–æ—Ä–∫–∏
           - –§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–µ –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞
        
        üéØ –¢–†–ï–ë–û–í–ê–ù–ò–Ø –ö –û–ü–ò–°–ê–ù–ò–Æ:
        1. –ó–∞–≥–æ–ª–æ–≤–æ–∫ (–¥–æ 100 —Å–∏–º–≤–æ–ª–æ–≤): —Ü–µ–ø–ª—è—é—â–∏–π, —Å –∫–ª—é—á–µ–≤—ã–º–∏ —Å–ª–æ–≤–∞–º–∏, —ç–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π —Ç—Ä–∏–≥–≥–µ—Ä
        2. –û–ø–∏—Å–∞–Ω–∏–µ (200-500 —Å–∏–º–≤–æ–ª–æ–≤): –ø—Ä–æ–¥–∞—é—â–µ–µ, —Å –ø—Å–∏—Ö–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–º–∏ —Ç—Ä–∏–≥–≥–µ—Ä–∞–º–∏, –æ—Å–Ω–æ–≤–∞–Ω–Ω–æ–µ –Ω–∞ –í–ò–î–ò–ú–´–• —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∞—Ö
        3. Bullet-points (5 —à—Ç—É–∫): –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ –≤—ã–≥–æ–¥—ã, –æ—Å–Ω–æ–≤–∞–Ω–Ω—ã–µ –Ω–∞ —Ç–æ–º —á—Ç–æ –≤–∏–¥–Ω–æ –Ω–∞ —Ñ–æ—Ç–æ + —ç–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–µ —Ç—Ä–∏–≥–≥–µ—Ä—ã
        4. –•–µ—à—Ç–µ–≥–∏ (5-7 —à—Ç—É–∫): —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω—ã–µ –¥–ª—è –ø–æ–∏—Å–∫–∞ + —Ç—Ä–µ–Ω–¥–æ–≤—ã–µ –∫–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞
        
        \(getCategorySpecificGuidelines(category))
        
        –§–û–†–ú–ê–¢ –û–¢–í–ï–¢–ê (—Å—Ç—Ä–æ–≥–æ JSON):
        {
          "title": "–ó–∞–≥–æ–ª–æ–≤–æ–∫ —Ç–æ–≤–∞—Ä–∞",
          "description": "–ü–æ–¥—Ä–æ–±–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞...",
          "bullets": [
            "–ü–µ—Ä–≤–∞—è –≤—ã–≥–æ–¥–∞",
            "–í—Ç–æ—Ä–∞—è –≤—ã–≥–æ–¥–∞",
            "–¢—Ä–µ—Ç—å—è –≤—ã–≥–æ–¥–∞",
            "–ß–µ—Ç–≤–µ—Ä—Ç–∞—è –≤—ã–≥–æ–¥–∞",
            "–ü—è—Ç–∞—è –≤—ã–≥–æ–¥–∞"
          ],
          "hashtags": ["#—Ö–µ—à—Ç–µ–≥1", "#—Ö–µ—à—Ç–µ–≥2", "#—Ö–µ—à—Ç–µ–≥3", "#—Ö–µ—à—Ç–µ–≥4", "#—Ö–µ—à—Ç–µ–≥5"]
        }
        
        –í–ê–ñ–ù–û: –û—Ç–≤–µ—á–∞–π –¢–û–õ–¨–ö–û –≤–∞–ª–∏–¥–Ω—ã–º JSON, –±–µ–∑ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–≥–æ —Ç–µ–∫—Å—Ç–∞!
        """
        
        return basePrompt
    }
    
    private func detectMediaType(from data: Data) -> String {
        // –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Ç–∏–ø–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –ø–æ magic bytes
        guard data.count >= 4 else {
            return "image/jpeg" // default
        }
        
        let bytes = data.prefix(4)
        
        // PNG: 89 50 4E 47
        if bytes.starts(with: [0x89, 0x50, 0x4E, 0x47]) {
            return "image/png"
        }
        
        // JPEG: FF D8 FF
        if bytes.starts(with: [0xFF, 0xD8, 0xFF]) {
            return "image/jpeg"
        }
        
        // WebP: 52 49 46 46 ... 57 45 42 50
        if bytes.starts(with: [0x52, 0x49, 0x46, 0x46]) && data.count >= 12 {
            let webpMarker = data[8..<12]
            if webpMarker == Data([0x57, 0x45, 0x42, 0x50]) {
                return "image/webp"
            }
        }
        
        // GIF: 47 49 46 38
        if bytes.starts(with: [0x47, 0x49, 0x46, 0x38]) {
            return "image/gif"
        }
        
        // Default to JPEG if unknown
        return "image/jpeg"
    }
    
    // MARK: - Response Parsing
    
    private func parseResponse(_ response: ClaudeResponse) throws -> ParsedDescription {
        guard let content = response.content.first?.text else {
            throw ClaudeError.emptyResponse
        }
        
        // –ò–∑–≤–ª–µ—á—å JSON –∏–∑ –æ—Ç–≤–µ—Ç–∞ (Claude –º–æ–∂–µ—Ç –¥–æ–±–∞–≤–∏—Ç—å —Ç–µ–∫—Å—Ç –¥–æ/–ø–æ—Å–ª–µ)
        let jsonString = extractJSON(from: content)
        
        // –î–µ—Ç–∞–ª—å–Ω–æ–µ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
        app.logger.info("üìã Extracted JSON preview: \(jsonString.prefix(300))...")
        app.logger.info("üìã Full extracted JSON: \(jsonString)")
        
        guard let jsonData = jsonString.data(using: .utf8) else {
            app.logger.error("‚ùå Failed to convert JSON string to data")
            throw ClaudeError.invalidJSON
        }
        
        let decoder = JSONDecoder()
        
        do {
            // –ü–æ–ø—ã—Ç–∫–∞ 1: –ü—Ä—è–º–æ–µ –¥–µ–∫–æ–¥–∏—Ä–æ–≤–∞–Ω–∏–µ
            let result = try decoder.decode(ParsedDescription.self, from: jsonData)
            app.logger.info("‚úÖ Parsed JSON directly")
            return result
        } catch let directError {
            app.logger.warning("‚ö†Ô∏è Direct parsing failed: \(directError)")
            
            // –ü–æ–ø—ã—Ç–∫–∞ 2: Claude –æ–±–µ—Ä–Ω—É–ª –≤ {"result": {...}}
            do {
                let wrapper = try decoder.decode(ParsedDescriptionWrapper.self, from: jsonData)
                app.logger.info("‚úÖ Parsed wrapped JSON with 'result' key")
                return wrapper.result
            } catch let wrapperError {
                app.logger.error("‚ùå JSON parsing error (both attempts failed)")
                app.logger.error("Direct error: \(directError)")
                app.logger.error("Wrapper error: \(wrapperError)")
                app.logger.error("Content: \(content)")
                app.logger.error("JSON string: \(jsonString)")
                throw ClaudeError.invalidJSON
            }
        }
    }
    
    private func extractJSON(from text: String) -> String {
        // –ü–æ–ø—ã—Ç–∫–∞ 1: –ù–∞–π—Ç–∏ JSON –º–µ–∂–¥—É ```json –∏ ```
        if let start = text.range(of: "```json")?.upperBound,
           let end = text[start...].range(of: "```")?.lowerBound {
            return String(text[start..<end]).trimmingCharacters(in: .whitespacesAndNewlines)
        }
        
        // –ü–æ–ø—ã—Ç–∫–∞ 2: –ù–∞–π—Ç–∏ JSON –º–µ–∂–¥—É { –∏ }
        if let start = text.firstIndex(of: "{"),
           let end = text.lastIndex(of: "}") {
            return String(text[start...end])
        }
        
        // –ü–æ–ø—ã—Ç–∫–∞ 3: –í–µ—Å—å —Ç–µ–∫—Å—Ç (–µ—Å–ª–∏ —ç—Ç–æ —á–∏—Å—Ç—ã–π JSON)
        return text.trimmingCharacters(in: .whitespacesAndNewlines)
    }
    
    // MARK: - Models
    
    struct ProductDescription {
        let title: String
        let description: String
        let bullets: [String]
        let hashtags: [String]
        let tokensUsed: Int
        let processingTimeMs: Int
    }
    
    private struct ParsedDescription: Codable {
        let title: String
        let description: String
        let bullets: [String]
        let hashtags: [String]
    }
    
    // –û–±–µ—Ä—Ç–∫–∞ –¥–ª—è —Å–ª—É—á–∞—è –∫–æ–≥–¥–∞ Claude –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç {"result": {...}}
    private struct ParsedDescriptionWrapper: Codable {
        let result: ParsedDescription
    }
    
    // MARK: - Errors
    
    enum ClaudeError: Error, CustomStringConvertible {
        case apiError(HTTPResponseStatus)
        case emptyResponse
        case invalidJSON
        case rateLimitExceeded
        
        var description: String {
            switch self {
            case .apiError(let status):
                return "Claude API error: \(status)"
            case .emptyResponse:
                return "Empty response from Claude"
            case .invalidJSON:
                return "Failed to parse JSON from Claude response"
            case .rateLimitExceeded:
                return "Claude API rate limit exceeded"
            }
        }
    }
}

// MARK: - Application Extension

extension Application {
    private struct ClaudeServiceKey: StorageKey {
        typealias Value = ClaudeService
    }
    
    var claude: ClaudeService {
        get {
            guard let service = storage[ClaudeServiceKey.self] else {
                fatalError("ClaudeService not configured")
            }
            return service
        }
        set {
            storage[ClaudeServiceKey.self] = newValue
        }
    }
}

