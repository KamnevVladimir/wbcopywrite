import Foundation

enum Constants {
    // Subscription plans - –ø–∞–∫–µ—Ç–Ω–∞—è –º–æ–¥–µ–ª—å
    enum SubscriptionPlan: String, CaseIterable {
        case free = "free"
        case small = "small"
        case medium = "medium"
        case large = "large"
        case max = "max"
        
        var name: String {
            switch self {
            case .free: return "Free"
            case .small: return "–ú–∞–ª—ã–π"
            case .medium: return "–°—Ä–µ–¥–Ω–∏–π"
            case .large: return "–ë–æ–ª—å—à–æ–π"
            case .max: return "–ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π"
            }
        }
        
        var emoji: String {
            switch self {
            case .free: return "üéÅ"
            case .small: return "üì¶"
            case .medium: return "üì¶üì¶"
            case .large: return "üì¶üì¶üì¶"
            case .max: return "üéÅüíé"
            }
        }
        
        var price: Decimal {
            switch self {
            case .free: return 0
            case .small: return 299
            case .medium: return 599
            case .large: return 999
            case .max: return 1399
            }
        }
        
        var textGenerationsLimit: Int {
            switch self {
            case .free: return 3
            case .small: return 20
            case .medium: return 50
            case .large: return 100
            case .max: return 200
            }
        }
        
        var photoGenerationsLimit: Int {
            switch self {
            case .free: return 1  // –ë–æ–Ω—É—Å: 1 —Ñ–æ—Ç–æ —á—Ç–æ–±—ã –ø–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å
            case .small: return 3
            case .medium: return 5
            case .large: return 10
            case .max: return 20
            }
        }
        
        var totalGenerationsLimit: Int {
            return textGenerationsLimit + photoGenerationsLimit
        }
        
        var pricePerGeneration: Decimal {
            guard price > 0 else { return 0 }
            return price / Decimal(totalGenerationsLimit)
        }
        
        var description: String {
            switch self {
            case .free:
                return "3 —Ç–µ–∫—Å—Ç–∞ + 1 –±–æ–Ω—É—Å —Ñ–æ—Ç–æ"
            case .small:
                return "20 —Ç–µ–∫—Å—Ç–æ–≤ + 3 –±–æ–Ω—É—Å —Ñ–æ—Ç–æ"
            case .medium:
                return "50 —Ç–µ–∫—Å—Ç–æ–≤ + 5 –±–æ–Ω—É—Å —Ñ–æ—Ç–æ"
            case .large:
                return "100 —Ç–µ–∫—Å—Ç–æ–≤ + 10 –±–æ–Ω—É—Å —Ñ–æ—Ç–æ"
            case .max:
                return "200 —Ç–µ–∫—Å—Ç–æ–≤ + 20 –±–æ–Ω—É—Å —Ñ–æ—Ç–æ"
            }
        }
        
        var targetAudience: String {
            switch self {
            case .free:
                return "–ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å –±–æ—Ç–∞"
            case .small:
                return "–î–ª—è 5-10 —Ç–æ–≤–∞—Ä–æ–≤"
            case .medium:
                return "–î–ª—è 15-25 —Ç–æ–≤–∞—Ä–æ–≤"
            case .large:
                return "–î–ª—è 30-50 —Ç–æ–≤–∞—Ä–æ–≤"
            case .max:
                return "–î–ª—è –∞–≥–µ–Ω—Ç—Å—Ç–≤ –∏ 50+ —Ç–æ–≤–∞—Ä–æ–≤"
            }
        }
        
        var supportsPhotoGeneration: Bool {
            return true // –í—Å–µ –ø–∞–∫–µ—Ç—ã –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—Ç —Ñ–æ—Ç–æ!
        }
        
        var tributeProductId: String {
            switch self {
            case .free:
                return "" // Free –Ω–µ —Ç—Ä–µ–±—É–µ—Ç –æ–ø–ª–∞—Ç—ã
            case .small:
                return "83185" // Small 299‚ÇΩ (status: new, updated 13.10.2025)
            case .medium:
                return "83187" // Medium 599‚ÇΩ (status: new, updated 13.10.2025)
            case .large:
                return "83188" // Large 999‚ÇΩ (status: new, updated 13.10.2025)
            case .max:
                return "83189" // Max 1399‚ÇΩ (status: new, updated 13.10.2025)
            }
        }

        // Direct web links to Tribute product pages (fallback without API)
        var tributeWebLink: String {
            switch self {
            case .free:
                return ""
            case .small:
                return "https://web.tribute.tg/p/lDH" // Updated 13.10.2025
            case .medium:
                return "https://web.tribute.tg/p/lDJ" // Updated 13.10.2025
            case .large:
                return "https://web.tribute.tg/p/lDK" // Updated 13.10.2025
            case .max:
                return "https://web.tribute.tg/p/lDL" // Updated 13.10.2025
            }
        }
    }
    
    // Product categories
    enum ProductCategory: String, CaseIterable {
        case clothing = "clothing"
        case electronics = "electronics"
        case home = "home"
        case beauty = "beauty"
        case sports = "sports"
        case kids = "kids"
        case auto = "auto"
        case books = "books"
        case other = "other"
        
        var emoji: String {
            switch self {
            case .clothing: return "üëó"
            case .electronics: return "üì±"
            case .home: return "üè†"
            case .beauty: return "üíÑ"
            case .sports: return "‚öΩÔ∏è"
            case .kids: return "üß∏"
            case .auto: return "üöó"
            case .books: return "üìö"
            case .other: return "‚úèÔ∏è"
            }
        }
        
        var name: String {
            switch self {
            case .clothing: return "–û–¥–µ–∂–¥–∞ –∏ –æ–±—É–≤—å"
            case .electronics: return "–≠–ª–µ–∫—Ç—Ä–æ–Ω–∏–∫–∞"
            case .home: return "–î–æ–º –∏ —Å–∞–¥"
            case .beauty: return "–ö—Ä–∞—Å–æ—Ç–∞ –∏ –∑–¥–æ—Ä–æ–≤—å–µ"
            case .sports: return "–°–ø–æ—Ä—Ç –∏ –æ—Ç–¥—ã—Ö"
            case .kids: return "–î–µ—Ç—Å–∫–∏–µ —Ç–æ–≤–∞—Ä—ã"
            case .auto: return "–ê–≤—Ç–æ—Ç–æ–≤–∞—Ä—ã"
            case .books: return "–ö–Ω–∏–≥–∏ –∏ –∂—É—Ä–Ω–∞–ª—ã"
            case .other: return "–î—Ä—É–≥–æ–µ"
            }
        }
        
        var displayName: String {
            "\(emoji) \(name)"
        }
    }
    
    // Bot commands
    enum BotCommand: String {
        case start = "/start"
        case generate = "/generate"
        case balance = "/balance"
        case subscribe = "/subscribe"
        case help = "/help"
        case cancel = "/cancel"
        
        var description: String {
            switch self {
            case .start:
                return "–ù–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É —Å –±–æ—Ç–æ–º"
            case .generate:
                return "–°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –æ–ø–∏—Å–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞"
            case .balance:
                return "–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –æ—Å—Ç–∞—Ç–æ–∫ –≥–µ–Ω–µ—Ä–∞—Ü–∏–π"
            case .subscribe:
                return "–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–¥–ø–∏—Å–∫–æ–π"
            case .help:
                return "–ü–æ–º–æ—â—å –∏ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏"
            case .cancel:
                return "–û—Ç–º–µ–Ω–∏—Ç—å —Ç–µ–∫—É—â–µ–µ –¥–µ–π—Å—Ç–≤–∏–µ"
            }
        }
    }
    
    // Support
    enum Support {
        static let telegramContact = "https://t.me/deedeepapp"
        static let username = "@deedeepapp"
    }
    
    // Bot messages
    enum BotMessage {
        static let welcome = """
        üëã –ü—Ä–∏–≤–µ—Ç! –Ø –ø–æ–º–æ–≥—É —Å–æ–∑–¥–∞—Ç—å –ø—Ä–æ–¥–∞—é—â–∏–µ –æ–ø–∏—Å–∞–Ω–∏—è –¥–ª—è —Ç–≤–æ–∏—Ö —Ç–æ–≤–∞—Ä–æ–≤ –Ω–∞ Wildberries –∏ Ozon.
        
        üéØ –ß—Ç–æ —è —É–º–µ—é:
        ‚Ä¢ –ì–µ–Ω–µ—Ä–∏—Ä—É—é SEO-–æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –æ–ø–∏—Å–∞–Ω–∏—è
        ‚Ä¢ –°–æ–∑–¥–∞—é —Ü–µ–ø–ª—è—é—â–∏–µ –∑–∞–≥–æ–ª–æ–≤–∫–∏
        ‚Ä¢ –ü–æ–¥–±–∏—Ä–∞—é –∫–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞
        ‚Ä¢ –ü–∏—à—É bullet-points —Å –≤—ã–≥–æ–¥–∞–º–∏
        
        –ù–∞–∂–º–∏ /generate —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å!
        """
        
        static let selectCategory = """
        –í—ã–±–µ—Ä–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏—é —Ç–æ–≤–∞—Ä–∞:
        """
        
        static let enterProductInfo = """
        –û—Ç–ª–∏—á–Ω–æ! –¢–µ–ø–µ—Ä—å –æ–ø–∏—à–∏ —Ç–æ–≤–∞—Ä –∏–ª–∏ –æ—Ç–ø—Ä–∞–≤—å –§–û–¢–û üì∑
        
        *–ü—Ä–∏–º–µ—Ä—ã:*
        
        –ü—Ä–æ—Å—Ç–æ–π: _"–ñ–µ–Ω—Å–∫–∏–µ –∫—Ä–æ—Å—Å–æ–≤–∫–∏ –±–µ–ª—ã–µ Nike"_
        –î–µ—Ç–∞–ª—å–Ω—ã–π: _"–ö—Ä–æ—Å—Å–æ–≤–∫–∏ –∂–µ–Ω—Å–∫–∏–µ –±–µ–ª—ã–µ —Ç–µ–∫—Å—Ç–∏–ª—å —Ä–∞–∑–º–µ—Ä 36-41"_
        
        üí° –ò–ª–∏ –ø—Ä–æ—Å—Ç–æ –æ—Ç–ø—Ä–∞–≤—å —Ñ–æ—Ç–æ ‚Äî —è —Å–∞–º –≤—Å—ë –æ–ø–∏—à—É!
        """
        
        static let generating = """
        ‚è≥ –ì–µ–Ω–µ—Ä–∏—Ä—É—é –æ–ø–∏—Å–∞–Ω–∏–µ...
        
        –û–±—ã—á–Ω–æ —ç—Ç–æ –∑–∞–Ω–∏–º–∞–µ—Ç 10-15 —Å–µ–∫—É–Ω–¥.
        """
        
        static let limitExceeded = """
        üòî *–ö—Ä–µ–¥–∏—Ç—ã –∑–∞–∫–æ–Ω—á–∏–ª–∏—Å—å*
        
        üí° –ü—Ä–æ–¥–æ–ª–∂–∏ —Å –ª—é–±—ã–º –ø–∞–∫–µ—Ç–æ–º:
        
        üì¶ –ú–∞–ª—ã–π: 20 —Ç–µ–∫—Å—Ç–æ–≤ + 3 —Ñ–æ—Ç–æ –∑–∞ 299‚ÇΩ (13.0‚ÇΩ/—à—Ç)
        üì¶üì¶ –°—Ä–µ–¥–Ω–∏–π: 50 —Ç–µ–∫—Å—Ç–æ–≤ + 5 —Ñ–æ—Ç–æ –∑–∞ 599‚ÇΩ (10.9‚ÇΩ/—à—Ç) ‚≠êÔ∏è
        üì¶üì¶üì¶ –ë–æ–ª—å—à–æ–π: 100 —Ç–µ–∫—Å—Ç–æ–≤ + 10 —Ñ–æ—Ç–æ –∑–∞ 999‚ÇΩ (9.1‚ÇΩ/—à—Ç)
        
        –ù–∞–∂–º–∏ /subscribe –¥–ª—è –ø–æ–∫—É–ø–∫–∏
        """
        
        static func subscriptionInfo(plan: SubscriptionPlan, remaining: Int, total: Int) -> String {
            let pricePerItem = String(format: "%.1f", Double(truncating: plan.pricePerGeneration as NSNumber))
            
            return """
            üìä –¢–≤–æ—è –ø–æ–¥–ø–∏—Å–∫–∞: \(plan.name)
            
            –û—Å—Ç–∞–ª–æ—Å—å –≥–µ–Ω–µ—Ä–∞—Ü–∏–π: \(remaining) –∏–∑ \(total)
            –¶–µ–Ω–∞ –∑–∞ –æ–ø–∏—Å–∞–Ω–∏–µ: \(pricePerItem)‚ÇΩ
            
            –•–æ—á–µ—à—å –±–æ–ª—å—à–µ? /subscribe
            """
        }
        
        static func generationResult(title: String, description: String, bullets: [String]) -> String {
            let bulletsText = bullets.map { "‚Ä¢ \($0)" }.joined(separator: "\n")
            
            return """
            ‚úÖ –ì–æ—Ç–æ–≤–æ! –í–æ—Ç —Ç–≤–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ:
            
            üìù –ó–∞–≥–æ–ª–æ–≤–æ–∫:
            \(title)
            
            üìÑ –û–ø–∏—Å–∞–Ω–∏–µ:
            \(description)
            
            üéØ –ö–ª—é—á–µ–≤—ã–µ –≤—ã–≥–æ–¥—ã:
            \(bulletsText)
            
            –ù–∞–∂–º–∏ "–≠–∫—Å–ø–æ—Ä—Ç –≤ —Ñ–∞–π–ª" —á—Ç–æ–±—ã —Å–∫–∞—á–∞—Ç—å –∏–ª–∏ /generate –¥–ª—è –Ω–æ–≤–æ–≥–æ –æ–ø–∏—Å–∞–Ω–∏—è
            """
        }
        
        static let error = """
        ‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π –µ—â–µ —Ä–∞–∑ –∏–ª–∏ –Ω–∞–ø–∏—à–∏ –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É.
        """
    }
    
    // Timeouts
    enum Timeout {
        static let claudeRequest: TimeInterval = 30
        static let tributeRequest: TimeInterval = 15
        static let webhookTimeout: TimeInterval = 10
    }
    
    // Limits
    enum Limits {
        static let maxProductNameLength = 500
        static let maxDescriptionLength = 5000
        static let minGenerationInterval: TimeInterval = 2 // —Å–µ–∫—É–Ω–¥—ã –º–µ–∂–¥—É –≥–µ–Ω–µ—Ä–∞—Ü–∏—è–º–∏
    }
}


